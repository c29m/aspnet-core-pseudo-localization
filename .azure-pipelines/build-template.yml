parameters:
  agentOS: 'Windows'
  phaseName: ''
  queueName: ''
  buildArgs: ''
  beforeBuild: []
  afterBuild: []
  variables: {}
  dependsOn: ''
  artifacts:
    publish: true

phases:
  - phase: ${{ coalesce(parameters.phaseName, parameters.agentOS) }}
    dependsOn: ${{ parameters.dependsOn }}
    displayName: ${{ coalesce(parameters.phaseName, parameters.agentOS) }}
    queue:
      ${{ if ne(parameters.queueName, '') }}:
        name: ${{ parameters.queueName }}
      ${{ if and(eq(parameters.queueName, ''), eq(parameters.agentOS, 'Linux')) }}:
        name: Hosted Ubuntu 1804
      ${{ if and(eq(parameters.queueName, ''), eq(parameters.agentOS, 'macOS')) }}:
        name: Hosted macOS
      ${{ if and(eq(parameters.queueName, ''), eq(parameters.agentOS, 'Windows')) }}:
        name: Hosted Windows 2019 with VS2019
    variables:
      AgentOSName: ${{ parameters.agentOS }}
      ArchiveName: ${{ parameters.artifacts.archiveName }}
      BuildArgs: ${{ parameters.buildArgs }}
      ${{ insert }}: ${{ parameters.variables }}
    steps:
      - ${{ parameters.beforeBuild }}
      - task: UseDotNet@2
        displayName: 'Setup .NET Core SDK'
        inputs:
          useGlobalJson: true
      - pwsh: |
          ./build.ps1 -OutputPath $(Build.StagingDirectory) $(BuildArgs)
        name: BuildAndTest
        displayName: Build and test
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
          NUGET_XMLDOC_MODE: skip
      - task: PublishTestResults@2
        name: PublishTests
        displayName: Publish test results
        condition: always()
        inputs:
          failTaskOnFailedTests: true
          testRunner: VSTest
          testRunTitle: Tests ($(AgentOSName))
          testResultsFiles: $(Build.SourcesDirectory)/**/*.trx
      - task: PublishBuildArtifacts@1
        displayName: Publish build artifacts
        condition: eq(variables['System.PullRequest.IsFork'], false)
        inputs:
          PathToPublish: '$(Build.StagingDirectory)'
          ArtifactType: Container
          ${{ if eq(parameters.artifacts.name, '') }}:
            ArtifactName: BuildDrop-$(AgentOSName)
          ${{ if ne(parameters.artifacts.name, '') }}:
            ArtifactName: ${{ parameters.artifacts.name }}
      - ${{ parameters.afterBuild }}
